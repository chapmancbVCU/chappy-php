#!/user/bin/env php
<?php

require __DIR__.'/vendor/autoload.php';
use Dotenv\Dotenv;
use Symfony\Component\Console\Application;

// define('ROOT', __DIR__);
// define('DS', DIRECTORY_SEPARATOR);

// $dotenv = Dotenv::createImmutable(ROOT);
// $dotenv->safeLoad();

define('DS', DIRECTORY_SEPARATOR);
define('ROOT', dirname(__FILE__));

require_once('vendor/autoload.php');
$dotenv = Dotenv::createImmutable(__DIR__);
$dotenv->load();

// Load configuration and helper functions.
$array =  array('config', 'database', 'console');

foreach ($array as $value) {
    require_once(ROOT . DS . 'config' . DS . $value . '.php');
}

function autoload($className){
    $classAry = explode('\\',$className);
    $class = array_pop($classAry);
    $subPath = strtolower(implode(DS,$classAry));
    $path = ROOT . DS . $subPath . DS . $class . '.php';
    if(file_exists($path)){
        require_once($path);
    }
}

spl_autoload_register('autoload');
use Console\App\Commands\DropTablesCommand;
use Console\App\Commands\GenerateControllerCommand;
use Console\App\Commands\GenerateMigrationCommand;
use Console\App\Commands\GenerateModelCommand;
use Console\App\Commands\MakeCommand;
use Console\App\Commands\MakeDBCommand;
use Console\App\Commands\MakeDBUserCommand;
use Console\App\Commands\MakeEnvCommand;
use Console\App\Commands\MakeProfileImagesDirCommand;
use Console\App\Commands\MakeTestCommand;
use Console\App\Commands\MigrateRefreshCommand;
use Console\App\Commands\RemoveProfileImagesCommand;
use Console\App\Commands\RunMigrationCommand;
use Console\App\Commands\RunTestCommand;
 
$app = new Application();
$app->add(new DropTablesCommand());
$app->add(new GenerateControllerCommand());
$app->add(new GenerateMigrationCommand());
$app->add(new GenerateModelCommand());
$app->add(new MakeDBCommand());
$app->add(new MakeDBUserCommand());
$app->add(new MakeCommand());
$app->add(new MakeEnvCommand());
$app->add(new MakeProfileImagesDirCommand());
$app->add(new MakeTestCommand());
$app->add(new MigrateRefreshCommand());
$app->add(new RemoveProfileImagesCommand());
$app->add(new RunMigrationCommand());
$app->add(new RunTestCommand());
$app->run();